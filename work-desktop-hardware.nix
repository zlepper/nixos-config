# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/d5859be9-b2eb-43f8-b997-6f4fef554fde";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-d26f5db3-adad-472d-8244-27a2e65bb270".device =
    "/dev/disk/by-uuid/d26f5db3-adad-472d-8244-27a2e65bb270";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F6A6-D664";
    fsType = "vfat";
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/cf1c32eb-fa9e-422a-aa43-2d804a039995"; }];

  boot.initrd.luks.devices."luks-41434903-08ad-473f-bd3d-e8e01ef1762e".device =
    "/dev/disk/by-uuid/41434903-08ad-473f-bd3d-e8e01ef1762e";

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
